#!/bin/bash

SITENAME=$(id -un)

. /omd/sites/${SITENAME}/etc/omd/site.conf
. /omd/sites/${SITENAME}/etc/fastchecker.conf

if [ ! "$BASE_DIR" ]; then
	echo  "BASE_DIR is unset, please fill ~/etc/fastchecker.conf"
	exit 1
fi
LOG_DIR="/omd/sites/${SITENAME}/var/log/fastchecker"
TMP_DIR="/omd/sites/${SITENAME}/tmp/fastchecker/uwsgi"
PIDFILE=$TMP_DIR/fastchecker.pid


start_uwsgi() {
	[ "$1" == "test" ] || daemon="--daemonize2 $LOG_DIR/error.log"
	cd $BASE_DIR
	unset LD_LIBRARY_PATH
	source venv/bin/activate
	uwsgi \
		--master \
		--http 127.0.0.1:5001 \
		--need-app \
		--enable-threads \
		--thunder-lock \
		--add-header "Connection: Close" \
		--procname-prefix-spaced fastchecker \
		--die-on-term \
		--max-requests 20 \
		--processes $(($(nproc) * 2 + 1)) \
		--pidfile2 $PIDFILE \
		-H $BASE_DIR/venv \
		$daemon \
		--wsgi-file fastchecker.py \

}

case "$1" in
    start|test)
 	echo -n 'Starting fastchecker...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "Already running."
		exit 0
	    fi
	    echo "removing stale pid file..."
	    rm -f $PIDFILE
	fi

	# make sure, directories are there (ramdisk!)
	mkdir -p $TMP_DIR $LOG_DIR && start_uwsgi "$1" && echo OK || echo Error
    ;;
    stop)
	echo -n 'Stopping fastchecker...'
        PID=$(cat $PIDFILE 2>/dev/null)
        if [ -z "$PID" ] ; then
	    echo "not running."
        elif kill "$PID" ; then
            echo -n 'waiting for termination..'
	    N=0
	    while [ -d /proc/$PID ] ; do
		sleep 0.05
                if [ $((N % 20)) -eq 0 ]; then
		    echo -n .
                fi
		N=$((N+1))
		if [ $N -ge 400 ] ; then
		    echo "still running after 20 secs!"
		    exit 1
                fi
	    done    
	    echo "OK"
        else
	    echo "Failed"
        fi
    ;;
    restart|reload)
	$0 stop
	$0 start
    ;;
    status)
	echo -n 'Checking status of fastchecker...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "running"
		exit 0
	    fi
	fi
	echo "stopped"
	exit 1
    ;;
    *)
	echo "Usage: $0 {start|stop|restart|reload|status}"
    ;;
esac


